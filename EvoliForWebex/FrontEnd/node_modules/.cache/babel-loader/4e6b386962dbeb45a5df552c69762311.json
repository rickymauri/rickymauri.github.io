{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Utente\\\\Desktop\\\\progettoevoli\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Utente\\\\Desktop\\\\progettoevoli\\\\FrontEnd\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function (state, action) {\n  switch (action.type) {\n    case 'INIT_SOCKET':\n      return _objectSpread({}, state, {\n        socket: action.payload\n      });\n    case 'CLOSE_SOCKET':\n      return _objectSpread({}, state, {\n        socket: null\n      });\n    case 'ADD_FORM_ID_AND_CODE':\n      return _objectSpread({}, state, {\n        formId: action.payload.formId,\n        formCode: action.payload.formCode,\n        isClosed: action.payload.isClosed\n      });\n    case 'ADD_STUDENT_ID_AND_FORM_ID':\n      return _objectSpread({}, state, {\n        studentId: action.payload.studentId,\n        formId: action.payload.formId,\n        isClosed: action.payload.isClosed\n      });\n    case 'ADD_FEEDBACKS':\n      return _objectSpread({}, state, {\n        feedbacksList: action.payload.feedbacksList,\n        numberOfConnectedStudents: action.payload.numberOfConnectedStudents\n      });\n    case 'ADD_QUESTION':\n      return _objectSpread({}, state, {\n        questions: [].concat(_toConsumableArray(state.questions), [action.payload.question])\n      });\n    case 'QUESTION_UPDATE':\n      if (state.questions.findIndex(function (question) {\n        return question.questionId === action.payload.question.questionId;\n      }) === -1) {\n        return _objectSpread({}, state, {\n          questions: [].concat(_toConsumableArray(state.questions), [action.payload.question])\n        });\n      } else {\n        return _objectSpread({}, state, {\n          questions: state.questions.map(function (question) {\n            if (question.questionId === action.payload.question.questionId) {\n              return action.payload.question;\n            } else {\n              return question;\n            }\n          })\n        });\n      }\n    case 'ADD_FORM_IS_CLOSED':\n      return _objectSpread({}, state, {\n        isClosed: action.payload.isClosed\n      });\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["state","action","type","_objectSpread","socket","payload","formId","formCode","isClosed","studentId","feedbacksList","numberOfConnectedStudents","questions","concat","_toConsumableArray","question","findIndex","questionId","map"],"sources":["C:/Users/Utente/Desktop/progettoevoli/FrontEnd/src/context/SocketReducer.js"],"sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'INIT_SOCKET':\n      return {\n        ...state,\n        socket: action.payload,\n      };\n    case 'CLOSE_SOCKET':\n      return {\n        ...state,\n        socket: null,\n      };\n    case 'ADD_FORM_ID_AND_CODE':\n      return {\n        ...state,\n        formId: action.payload.formId,\n        formCode: action.payload.formCode,\n        isClosed: action.payload.isClosed,\n      };\n    case 'ADD_STUDENT_ID_AND_FORM_ID':\n      return {\n        ...state,\n        studentId: action.payload.studentId,\n        formId: action.payload.formId,\n        isClosed: action.payload.isClosed,\n      }\n    case 'ADD_FEEDBACKS':\n     return {\n      ...state,\n      feedbacksList: action.payload.feedbacksList,\n      numberOfConnectedStudents: action.payload.numberOfConnectedStudents,\n     } \n    case 'ADD_QUESTION':\n      return {\n        ...state,\n        questions: [...state.questions, action.payload.question],\n      };\n    case 'QUESTION_UPDATE':\n      if(state.questions.findIndex((question) => question.questionId === action.payload.question.questionId) === -1){  \n        return {\n          ...state,\n          questions: [...state.questions, action.payload.question],\n        };\n      } else {\n          return {\n            ...state,\n            questions: state.questions.map((question) => {\n              if(question.questionId === action.payload.question.questionId) {\n                return action.payload.question;\n              } else {\n                return question;\n              }\n            }),\n        };\n      }\n    case 'ADD_FORM_IS_CLOSED':\n      return {\n        ...state,\n        isClosed: action.payload.isClosed,\n      }\n    default:\n      return state;\n  }\n};\n"],"mappings":";;AAAA,gBAAe,UAACA,KAAK,EAAEC,MAAM,EAAK;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAAC,aAAA,KACKH,KAAK;QACRI,MAAM,EAAEH,MAAM,CAACI;MAAO;IAE1B,KAAK,cAAc;MACjB,OAAAF,aAAA,KACKH,KAAK;QACRI,MAAM,EAAE;MAAI;IAEhB,KAAK,sBAAsB;MACzB,OAAAD,aAAA,KACKH,KAAK;QACRM,MAAM,EAAEL,MAAM,CAACI,OAAO,CAACC,MAAM;QAC7BC,QAAQ,EAAEN,MAAM,CAACI,OAAO,CAACE,QAAQ;QACjCC,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG;MAAQ;IAErC,KAAK,4BAA4B;MAC/B,OAAAL,aAAA,KACKH,KAAK;QACRS,SAAS,EAAER,MAAM,CAACI,OAAO,CAACI,SAAS;QACnCH,MAAM,EAAEL,MAAM,CAACI,OAAO,CAACC,MAAM;QAC7BE,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG;MAAQ;IAErC,KAAK,eAAe;MACnB,OAAAL,aAAA,KACIH,KAAK;QACRU,aAAa,EAAET,MAAM,CAACI,OAAO,CAACK,aAAa;QAC3CC,yBAAyB,EAAEV,MAAM,CAACI,OAAO,CAACM;MAAyB;IAErE,KAAK,cAAc;MACjB,OAAAR,aAAA,KACKH,KAAK;QACRY,SAAS,KAAAC,MAAA,CAAAC,kBAAA,CAAMd,KAAK,CAACY,SAAS,IAAEX,MAAM,CAACI,OAAO,CAACU,QAAQ;MAAC;IAE5D,KAAK,iBAAiB;MACpB,IAAGf,KAAK,CAACY,SAAS,CAACI,SAAS,CAAC,UAACD,QAAQ;QAAA,OAAKA,QAAQ,CAACE,UAAU,KAAKhB,MAAM,CAACI,OAAO,CAACU,QAAQ,CAACE,UAAU;MAAA,EAAC,KAAK,CAAC,CAAC,EAAC;QAC5G,OAAAd,aAAA,KACKH,KAAK;UACRY,SAAS,KAAAC,MAAA,CAAAC,kBAAA,CAAMd,KAAK,CAACY,SAAS,IAAEX,MAAM,CAACI,OAAO,CAACU,QAAQ;QAAC;MAE5D,CAAC,MAAM;QACH,OAAAZ,aAAA,KACKH,KAAK;UACRY,SAAS,EAAEZ,KAAK,CAACY,SAAS,CAACM,GAAG,CAAC,UAACH,QAAQ,EAAK;YAC3C,IAAGA,QAAQ,CAACE,UAAU,KAAKhB,MAAM,CAACI,OAAO,CAACU,QAAQ,CAACE,UAAU,EAAE;cAC7D,OAAOhB,MAAM,CAACI,OAAO,CAACU,QAAQ;YAChC,CAAC,MAAM;cACL,OAAOA,QAAQ;YACjB;UACF,CAAC;QAAC;MAER;IACF,KAAK,oBAAoB;MACvB,OAAAZ,aAAA,KACKH,KAAK;QACRQ,QAAQ,EAAEP,MAAM,CAACI,OAAO,CAACG;MAAQ;IAErC;MACE,OAAOR,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module"}